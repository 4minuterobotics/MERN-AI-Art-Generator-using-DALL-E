import React, { useState } from "react";
import { useNavigate } from "react-router-dom";

import { preview } from "../assets";
import { getRandomPrompt } from "../utils";
import { FormField, Loader } from "../components";
const CreatePost = () => {
	const navigate = useNavigate(); // this will allow us to navigate back to the home page one the post is created
	const [form, setForm] = useState({
		name: "",
		prompt: "",
		photo: "",
	});
	const [generatingImg, setGeneratingImg] = useState(false); // will be used while making contact with the api and waiting to get the image back
	const [loading, setLoading] = useState(false);

	//function that sends prompt to back end
	const generateImage = async () => {
		if (form.prompt) {
			//if we have a promt
			try {
				setGeneratingImg(true); //set the image generating state to be true

				//code to send a post to the back end
				const response = await fetch("http://localhost:8080/api/v1/dalle", {
					// go to this api and submit the following info
					method: "POST", //method type
					headers: {
						"Content-Type": "application/json", //content type being passed
					},
					body: JSON.stringify({ prompt: form.prompt }), //convert body of the post into a json string
				});

				//parse the photo data from the backend set the data received back from the post to equal "data"
				const data = await response.json();

				//update the form on the page, which is a state changing function. Something's about to get rendered!
				setForm({ ...form, photo: `data:image/jpeg;base64,${data.photo}` });
			} catch (error) {
				alert(error);
			} finally {
				setGeneratingImg(false);
			}
		} else {
			alert("please enter a promt");
		}
	};

	const handleSubmit = () => {};

	//sends data from the form on the front end to the back end
	const handleChange = (e) => {
		setForm({ ...form, [e.target.name]: e.target.value });
	};

	const handleSurpriseMe = () => {
		const randomPrompt = getRandomPrompt(form.prompt);
		setForm({ ...form, prompt: randomPrompt });
	};

	return (
		<section className="max-w-7xl mx-auto">
			<div>
				<div>
					<h1 className="font-extrabold text-[#222328] text-[32px]">Create</h1>
					<p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
						Create imaginative and visually stunning images generated by DALL-E AI and share them with the community
					</p>
				</div>
			</div>
			<form className="mt-16 max-w-3xl" onSubmit={handleSubmit}>
				<div className="flex flex-col gap-5">
					<FormField
						LabelName="Your Name"
						type="text"
						name="name"
						placeholder="John Doe"
						value={form.name}
						handleChange={handleChange}
					/>
					<FormField
						LabelName="Prompt"
						type="text"
						name="prompt"
						placeholder="A white horse smoking a cigar"
						value={form.prompt}
						handleChange={handleChange}
						isSurpriseMe
						handleSurpriseMe={handleSurpriseMe}
					/>
					<div className="relative bg-gray-50 boder border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center">
						{form.photo ? (
							<img src={form.photo} alt={form.prompt} className="w-full h-full object-contain" />
						) : (
							<img src={preview} alt="preview" className="w-9/12 object-contain" />
						)}

						{generatingImg && (
							<div className="absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg">
								<Loader />
							</div>
						)}
					</div>
				</div>
				<div className="mt-5 flex gap-5">
					<button
						type="button"
						onClick={generateImage}
						className="text-white bg-green-700 font-md rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center"
					>
						{generatingImg ? "Generating..." : "Generate"}
					</button>
				</div>

				<div className="mt-10">
					<p className="mt-2 text-[#666e75] text-[14px]">
						Once you have created the image you want, you can share it with others in the community.
					</p>
					<button
						type="submit"
						className="mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center"
					>
						{loading ? "Sharing..." : "Share with the community"}
					</button>
				</div>
			</form>
		</section>
	);
};

export default CreatePost;
